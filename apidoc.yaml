openapi: 3.0.0
info:
  title: IceKathon Api
  version: '1.0'
  description: IceKathon API Doc
  contact:
    name: Agus Budianto
    email: agus.kbk@gmail.com
servers:
  - url: 'http://localhost:3000'
paths:
  /auth/login:
    post:
      summary: Login
      operationId: post-auth-login
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
      tags:
        - auth
      description: User Login Endpoint
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
  /items:
    get:
      summary: Get list of items
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                description: ''
                type: array
                x-examples:
                  example-1:
                    item_name: iphone
                    item_img: file_name.jpeg
                    item_status: 'false'
                items:
                  type: object
                  properties:
                    item_id:
                      type: integer
                    item_name:
                      type: string
                    item_img:
                      type: string
                    item_status:
                      type: boolean
                      description: 'true if the item is available, false if the item is borrowed'
              examples:
                example-1:
                  value:
                    - item_id: 101
                      item_name: iphone
                      item_img: item_name.jpeg
                      item_status: true
        '404':
          description: Item Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: error message
              examples:
                example-1:
                  value:
                    message: error message
      operationId: get-Items
      description: Get list of items provided to be borrowed
      x-internal: false
  '/items/{itemId}':
    parameters:
      - schema:
          type: number
        name: itemId
        in: path
        required: true
    get:
      summary: Get item detail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    item_id: '101'
                    item_name: Phone
                    item_type: Iphone 13
                    item_img: item_uuid.jpeg
                    color: white
                    ram: 4GB
                    storage: 128GB
                    item_status: 'true'
                properties:
                  item_id:
                    type: integer
                  item_name:
                    type: string
                    minLength: 1
                  item_type:
                    type: string
                    minLength: 1
                  item_img:
                    type: string
                    minLength: 1
                  color:
                    type: string
                    minLength: 1
                  ram:
                    type: integer
                  storage:
                    type: integer
                  item_status:
                    type: boolean
                    description: 'true if the item is available, false if the item is not available'
                required:
                  - item_id
                  - item_name
                  - item_type
                  - item_img
                  - color
                  - ram
                  - storage
                  - item_status
              examples:
                example-1:
                  value:
                    item_id: 101
                    item_name: Phone
                    item_type: Iphone 13
                    item_img: item_uuid.jpeg
                    color: White
                    ram: 4
                    storage: 128
                    item_status: true
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: error message
              examples:
                example-1:
                  value:
                    message: error message
      operationId: get-Items-itemId
      description: Get item detail
  '/items/{itemId}/borrow':
    post:
      summary: Create borrow item request
      operationId: post-user
      responses:
        '201':
          description: Request Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  item_type:
                    type: string
                    minLength: 1
                  item_name:
                    type: string
                    minLength: 1
                  item_id:
                    type: number
                  item_spec:
                    type: object
                    properties:
                      item_ram:
                        type: number
                      item_storage:
                        type: number
                    required:
                      - item_ram
                      - item_storage
                required:
                  - item_type
                  - item_name
                  - item_id
                  - item_spec
                x-examples:
                  example-1:
                    item_type: Phone
                    item_name: Iphone 12
                    item_id: 101
                    item_spec:
                      item_ram: 4
                      item_storage: 128
              examples:
                example-1:
                  value:
                    item_type: Phone
                    item_name: Iphone 12
                    item_id: 101
                    item_spec:
                      item_ram: 4
                      item_storage: 128
        '400':
          description: Missing Required Information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-2:
                  value:
                    message: error message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                item_name:
                  type: string
                item_spec:
                  type: object
                  properties:
                    item_ram:
                      type: integer
                    item_storage:
                      type: integer
                  required:
                    - item_ram
                    - item_storage
              required:
                - item_type
                - item_name
            examples:
              example-1:
                value:
                  item_type: Phone
                  item_name: Iphone 12
                  item_id: 101
                  item_spec:
                    item_ram: 4
                    item_storage: 128
        description: Post the necessary fields for the API to borrow the item.
      description: Request to borrow item
    parameters:
      - schema:
          type: integer
        name: itemId
        in: path
        required: true
        description: item uuid
  '/items/{itemId}/return':
    parameters:
      - schema:
          type: integer
        name: itemId
        in: path
        required: true
    post:
      summary: Create return item request
      operationId: post-items-itemId-return_item
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: error message
      description: Request to return item
  /items/borrow:
    get:
      summary: Get list of borrowed items
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    item_id:
                      type: integer
                    item_type:
                      type: string
                    item_name:
                      type: string
                    item_img:
                      type: string
                    borrow_at:
                      type: string
                      description: show the time when the item is borrowed
                    borrow_by:
                      type: string
                      description: name of the people who borrow the item
              examples:
                example-1:
                  value:
                    - item_id: 101
                      item_type: Phone
                      item_name: Iphone 13
                      borrow_at: 09/10/2021
                      borrow_by: moris
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: error message
      operationId: get-items-borrowed
      description: Get list of borrowed items
  /me/borrow:
    get:
      summary: List of item someone borrowed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    item_id:
                      type: integer
                    item_name:
                      type: string
                    item_type:
                      type: string
                    item_img:
                      type: string
                    borrow_at:
                      type: string
              examples:
                example-1:
                  value:
                    - item_id: 102
                      item_name: Iphone 12
                      item_type: Phone
                      item_img: item_uuid.jpeg
                      borrow_at: 10/11/2021
                    - item_id: 201
                      item_name: Macbook Pro
                      item_type: Laptop
                      item_img: item_uuid.jpeg
                      borrow_at: 9/11/2021
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: error message
      operationId: get-me-borrow
      description: Get list of item a certain person borrow
  /installment/catalog:
    get:
      summary: Get Installment Catalog
      tags:
        - installment/purchase program
      responses:
        '200':
          $ref: '#/components/responses/UserInstallmentCatalog'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      operationId: get-installment-catalog
      description: Get List Of Previous User Installment Item
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Authorization'
  '/installment/catalog/{catalogId}':
    parameters:
      - schema:
          type: number
          example: 1
        name: catalogId
        in: path
        required: true
    get:
      summary: Get Catalog Detail Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  title:
                    type: string
                    minLength: 1
                  specification:
                    type: string
                    minLength: 1
                  price:
                    type: number
                  type:
                    type: string
                    minLength: 1
                  available_color:
                    type: array
                    items:
                      required: []
                      properties: {}
                  product:
                    type: object
                    properties:
                      name:
                        type: string
                      serial-number:
                        type: string
                    required:
                      - name
                      - serial-number
                  subsidy:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - title
                  - specification
                  - price
                  - type
                  - available_color
                  - product
                  - subsidy
                x-examples:
                  example-1:
                    id: 1
                    title: mac pro 2021
                    specification: RAM 20GB
                    price: 1000000
                    type: device
                    available_color:
                      - Red
                      - Blue
                    product:
                      name: ''
                      serial-number: ''
                    subsidy: []
              examples:
                Catalog Detail Information:
                  value:
                    id: 1
                    title: mac pro 2021
                    specification: RAM 20GB
                    price: 1000000
                    type: device
                    available_color:
                      - Red
                      - Blue
                    product:
                      name: ''
                      serial_number: ''
                    subsidy: []
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      operationId: get-installment-catalog-catalogId
      description: Get Catalog Detail Information from spesific catalog
      tags:
        - installment/purchase program
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Authorization'
  /installment:
    get:
      summary: Get User Installment List
      tags:
        - installment/purchase program
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  total:
                    type: number
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - title
                        - specification
                        - start_contract
                        - end_contract
                        - payment_remaining
                        - approved
                      properties:
                        id:
                          type: number
                        title:
                          type: string
                          minLength: 1
                        specification:
                          type: string
                          minLength: 1
                        start_contract:
                          type: string
                          minLength: 1
                        end_contract:
                          type: string
                          minLength: 1
                        payment_remaining:
                          type: number
                        approved:
                          type: boolean
                required:
                  - total
                  - data
                x-examples:
                  example-1:
                    total: 1
                    data:
                      - id: 1
                        title: macbook
                        specification: 2GB
                        start_contract: '2009-11-10T23:00:00Z'
                        end_contract: '2009-11-10T23:00:00Z'
                        payment_remaining: 5000000
                        approved: false
              examples:
                InstallmentList:
                  value:
                    total: 1
                    data:
                      - id: 1
                        title: macbook
                        specification: 2GB
                        start_contract: '2009-11-10T23:00:00Z'
                        end_contract: '2009-11-10T23:00:00Z'
                        payment_remaining: 5000000
                        approved: false
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      operationId: get-installment
      description: Get User Previous Installment List
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Authorization'
    post:
      summary: Apply Installment/Purcashe Program
      operationId: post-installment
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
      tags:
        - installment/purchase program
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                catalog_id:
                  type: number
              required:
                - catalog_id
              x-examples:
                example-1:
                  catalog_id: 5
            examples:
              InstallmentApplicationExample:
                value:
                  catalog_id: 5
        description: installment apllication request
      description: Apply Installment/Purcashe Program
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/installment/{installmentId}':
    parameters:
      - schema:
          type: number
          example: 1
        name: installmentId
        in: path
        required: true
    get:
      summary: Get Detail Installment
      tags:
        - installment/purchase program
      operationId: get-installment-installmentId
      description: Get Detail Contract of Installment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installment'
              examples:
                example-1:
                  value:
                    id: 0
                    account_id: 0
                    item_id: 0
                    price: 0
                    subsidy_amount: 0
                    installment_status: string
                    requested_at: string
                    started_at: string
                    approval_at: string
                    finish_at: string
                    first_time: true
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Authorization'
  /installment/application:
    get:
      summary: Get Installment Application Request
      tags:
        - installment admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  total:
                    type: number
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - requested_at
                        - first_time
                      properties:
                        id:
                          type: number
                        applicants_detail:
                          type: object
                          properties:
                            name:
                              type: string
                              minLength: 1
                            position:
                              type: string
                              minLength: 1
                            phone:
                              type: string
                              minLength: 1
                            address:
                              type: string
                              minLength: 1
                            email:
                              type: string
                              minLength: 1
                          required:
                            - name
                            - position
                            - phone
                            - address
                            - email
                        item:
                          type: object
                          properties:
                            id:
                              type: number
                            description:
                              type: string
                              minLength: 1
                            price:
                              type: number
                            type:
                              type: string
                              minLength: 1
                          required:
                            - id
                            - description
                            - price
                            - type
                        subsidy:
                          type: array
                          items:
                            required: []
                            properties: {}
                        requested_at:
                          type: string
                          minLength: 1
                        first_time:
                          type: boolean
                required:
                  - total
                  - data
                x-examples:
                  example-1:
                    total: 1
                    data:
                      - id: 1
                        applicants_detail:
                          name: user name
                          position: engineer
                          phone: '0821'
                          address: jakarta
                          email: email@google.com
                        item:
                          id: 2
                          description: RAM GEDE
                          price: 10000
                          type: device
                        subsidy: []
                        requested_at: '2009-11-10T23:00:00Z'
                        first_time: true
              examples:
                ListInstallmentApplicationRequestExample:
                  value:
                    total: 1
                    data:
                      - id: 1
                        applicants_detail:
                          name: user name
                          position: engineer
                          phone: '0821'
                          address: jakarta
                          email: email@google.com
                        item:
                          id: 2
                          description: RAM GEDE
                          price: 10000
                          type: device
                        subsidy: []
                        requested_at: '2009-11-10T23:00:00Z'
                        first_time: true
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      operationId: get-installment-apllication
      description: Get Installment Application Request
      parameters:
        - $ref: '#/components/parameters/Authorization'
    post:
      summary: Accept Installment Application
      operationId: post-installment-apllication
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                id:
                  type: number
              required:
                - id
              x-examples:
                example-1:
                  id: 1
            examples:
              AcceptInstallmentApplicationExample:
                value:
                  id: 1
        description: Accept Installment Application Request
      tags:
        - installment admin
    parameters: []
    patch:
      summary: Decline Installment Application
      operationId: patch-installment-application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  success:
                    type: boolean
                required:
                  - success
                x-examples:
                  example-1:
                    success: true
              examples:
                DeclineInstallmentApplication:
                  value:
                    success: true
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
      description: Decline Installment Application
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Authorization'
      tags:
        - installment admin
components:
  schemas:
    Installment:
      description: ''
      type: object
      properties:
        id:
          type: number
        account_id:
          type: number
        item_id:
          type: number
        price:
          type: number
        subsidy_amount:
          type: number
        installment_status:
          type: string
          minLength: 1
        requested_at:
          type: string
          minLength: 1
        started_at:
          type: string
          minLength: 1
        approval_at:
          type: string
          minLength: 1
        finish_at:
          type: string
          minLength: 1
        first_time:
          type: boolean
      required:
        - id
        - account_id
        - item_id
        - price
        - subsidy_amount
        - installment_status
        - requested_at
        - started_at
        - approval_at
        - finish_at
        - first_time
      x-examples:
        example-1:
          id: 1
          account_id: 5
          item_id: 5
          price: 555
          subsidy_amount: 55
          installment_status: approved
          requested_at: '2009-11-10T23:00:00Z'
          started_at: '2009-11-10T23:00:00Z'
          approval_at: '2009-11-10T23:00:00Z'
          finish_at: '2009-11-10T23:00:00Z'
          first_time: false
  requestBodies:
    LoginRequest:
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              email:
                type: string
                minLength: 1
              password:
                type: string
                minLength: 1
            required:
              - email
              - password
            x-examples:
              example-1:
                email: user@icehousecorp.com
                password: user password
          examples:
            Login Request Example:
              $ref: '#/components/examples/LoginRequestExample'
      description: Login Request
  examples:
    LoginRequestExample:
      value:
        email: user@icehousecorp.com
        password: user password
    200Resp:
      value:
        success: true
    ErrorResp:
      value:
        code: Err-XX
        message: error messages
    422Resp:
      value:
        fields:
          fieldname1: ''
          fieldname2: ''
    InstallmentCatalogExample:
      value:
        total: 2
        data:
          - id: 1
            title: mac pro 2021
            description: RAM 20GB
            price: 1000000
            type: device
          - id: 1
            title: Iphone X
            description: RAM 10GB
            price: 5000
            type: phone
  parameters:
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        default: 'Bearer {{access_token}}'
  responses:
    '200':
      description: Succes Response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
          examples:
            SuccesResponseExample:
              $ref: '#/components/examples/200Resp'
        application/xml:
          schema:
            description: ''
            type: object
            properties:
              success:
                type: boolean
            required:
              - success
            x-examples:
              example-1:
                success: true
      headers: {}
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            required:
              - code
              - message
            x-examples:
              example-1:
                code: ''
                message: ''
          examples:
            BadReqeustExample:
              $ref: '#/components/examples/ErrorResp'
      headers: {}
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            required:
              - code
              - message
            x-examples:
              example-1:
                code: ''
                message: ''
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/ErrorResp'
        application/xml:
          schema:
            type: object
            properties: {}
      headers: {}
    '422':
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
          examples:
            UnprocessibleEntityResponseExample:
              $ref: '#/components/examples/422Resp'
    UserInstallmentCatalog:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              total:
                type: number
              data:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  required:
                    - id
                    - title
                    - description
                    - price
                    - type
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    price:
                      type: number
                    type:
                      type: string
                      minLength: 1
            required:
              - total
              - data
            x-examples:
              example-1:
                total: 2
                data:
                  - id: 1
                    title: mac pro 2021
                    description: RAM 20GB
                    price: 1000000
                    type: device
                  - id: 1
                    title: Iphone X
                    description: RAM 10GB
                    price: 5000
                    type: phone
          examples:
            UserInstallmentCatalog:
              $ref: '#/components/examples/InstallmentCatalogExample'